# Web Analytics Dashboard Application Requirements

## Project Overview
Build a web application using **PHP** and **SQLite** to track and display website visitor analytics.

## Dashboard Structure

### Tab 1: Traffic
**Components:**

1. **Stacked Bar Chart**
   - Display unique visitors only (no duplicate counting)
   - Three segments (bottom to top):
     - **Bots** (bottom) - Red color
     - **New Visitors** (middle) - Green color  
     - **Returning Visitors** (top) - Blue color

2. **Live Visitor Table**
   - Display real-time visitor activity
   - Columns: Time, Page Viewed, Event Type
   - **Hover behavior**: Show tooltip immediately (no delay) displaying all collected data for that visitor

### Tab 2: Settings
- Display a JavaScript tracking code snippet
- Users can copy this snippet to add to their website
- The snippet should link to the JavaScript file that handles event tracking

## Data Collection Requirements

For each tracking event, capture the following data:

| Field | Description |
|-------|-------------|
| Timestamp | Unix timestamp in milliseconds |
| ID | Unique identifier (hash of IP address + user agent) |
| Event_Type | Type of event (page view, click, etc.) |
| Page | Current page URL |
| Referrer | Referring URL |
| Country | 2-letter country code (extract from JavaScript `navigator.language`) |
| OS | Operating system |
| Browser | Browser name and version |
| Device_Type | PC or MOBILE |
| Resolution | Screen resolution |
| Timezone | User's timezone |
| Page Load | Page load time in milliseconds |
| isBot | Boolean - true if user agent matches known crawlers/bots |
| User Agent | Full user agent string |

## Testing Setup

1. **Create Test Environment**
   - Create a folder named `fake_website`
   - Build a simple test website inside this folder
   - This will be used to test the tracking functionality

2. **End-to-End Testing**
   - Use Playwright for automated E2E testing
   - Tests should verify:
     - Event tracking works correctly
     - Data is stored properly in SQLite
     - Dashboard displays accurate statistics
     - Live table updates in real-time

## Technical Implementation Notes

- **Database**: Use SQLite for data storage
- **Backend**: PHP for server-side processing
- **Frontend**: Include necessary JavaScript for:
  - Rendering the stacked bar chart
  - Updating the live visitor table
  - Handling the tracking script functionality
- **Tracking Script**: JavaScript code that sends event data to your PHP backend

## Success Criteria
- Accurate visitor counting (new vs. returning)
- Proper bot detection and segregation
- Real-time data display in the dashboard
- All specified data fields are collected and stored
- Tracking script works when embedded in external websites


then test it


# Playwright Test Script Instructions for Visitor Statistics

## Objective
Create a Playwright test script to verify that visitor statistics are tracked and displayed correctly.

## Setup Requirements
1. **Clear the database**: Start by deleting ALL events from the database
2. **Set time filter**: Ensure "Last 24 hours" is selected as the active time range

## Test Sequence

### Phase 1: Test New Visitors
1. Visit the fake website **8 times**, each with a **different, randomly generated user agent**
   - Important: Each user agent must be unique
2. **Verify**: The "New Visitors" counter above the chart should display **8**

### Phase 2: Test Returning Visitors
1. Generate a **new random user agent** (different from the 8 used previously)
2. Visit the website **2 times** using this same user agent
3. **Verify**: 
   - "New Visitors" counter should display **9** (8 + 1 new)
   - "Returning Visitors" counter should display **1** (the visitor who came twice)

### Phase 3: Test Bot Detection
1. Visit the website using `curl` as the user agent
2. Visit the website using `googlebot` as the user agent
3. **Verify all counters**:
   - Total Visitors: **10**
   - New Visitors: **9** 
   - Returning Visitors: **1**
   - Bots: **2**

## Important Rules
- **Bot behavior**: Bots do NOT count as visitors (they only appear in the "Bots" counter)
- **New visitor definition**: A visitor using a user agent that has NEVER been seen before in the database
- **Returning visitor definition**: A visitor using a user agent that has been seen at least once before (at any point in time)
- **Event filtering**: Only "page view" type events should be counted for visitor statistics

## Error Handling
- Check for any console errors during the test
- If bugs are found or numbers don't match expectations, debug and fix the issues
- Continue testing until all counters show the correct values

## Expected Final State
After all test phases:
- Total Visitors: 10
- New Visitors: 9
- Returning Visitors: 1
- Bots: 2

Ultrathink !